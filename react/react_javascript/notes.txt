npx create-react-app organo
npm start
_____________________________
npx vs npm
Agora não usamos o npx mas sim o npm, a diferença é que o npm nós vamos utilizar para rodar coisas locais, 
quando rodamos o npx quer dizer que estamos rodando o script de forma remota, 
não está muito vinculado ao ambiente local.
_________________________________________________
useState
Sempre que queremos que o componente reaja a alguma alteração no valor de uma variável e se renderize novamente, 
precisamos indicar isto utilizando o useState. Do contrário, o valor vai ser alterado mas o DOM não será atualizado.

_________________________________________________
statefull e stateless
React tem duas abordagens diferentes para lidar com inputs de formulários.

Um elemento de input de formulário cujo valor é controlado pelo React é chamado de componente controlado 
(statefull em inglês). Quando o usuário insere dados em um componente controlado, 
o evento que manipula essa alteração é disparado e o seu código decide se o input é válido 
(ou seja, renderizado com o valor atualizado). Se você não re-renderizar o elemento de formulário, 
permanecerá inalterado.

Um componente não controlado (stateless em inglês) funciona como um elemento de formulário fora do React. 
Quando um usuário insere dados em um campo de formulário (um input box, dropbox, etc), a informação atualizada é 
refletida sem necessidade do React fazer nada. No entanto, isso também significa que você não pode forçar o campo a 
ter um certo valor.

_________________________________________________

Você estava passando a prop aoDeletar para seus componentes, mas a função não estava sendo executada no evento de click.
Após pesquisas, percebeu que a prop aoDeletar estava undefined. Qual o possível motivo deste problema?

A função não está sendo passada em todos os componentes acima do que você quer utilizar.
Isso aí! Muito provavelmente, caso o seu componente esteja muito abaixo na árvore, você não está passando 
a função para todos os componentes!
_________________________________________________
React só muda states, não muda constantes

Por que precisamos transformar a constante times em um state para mudar a cor?

Mudamos porque só assim o React “escuta a mudança”.

Isso aí! Com o setState o React fica ciente que aquele pedaço pode ser mudado,
e assim que ele é mudado, o React atualiza a tela por nós.
